CHIP Adder
{
    IN x[8],y[8],as ;
    OUT s[8],overflowS, overflowUS;

    PARTS:
// to set up for add or subtract
    And(a=as,b=as,out=c0);
    Xor(a=y[0],b=as,out=y0);
    Xor(a=y[1],b=as,out=y1);
    Xor(a=y[2],b=as,out=y2);
    Xor(a=y[3],b=as,out=y3);
    Xor(a=y[4],b=as,out=y4);
    Xor(a=y[5],b=as,out=y5);
    Xor(a=y[6],b=as,out=y6);
    Xor(a=y[7],b=as,out=y7);
    Xor(a=false,b=as,out=y8);
    Xor(a=false,b=as,out=y9);
    Xor(a=false,b=as,out=y10);
    Xor(a=false,b=as,out=y11);
    Xor(a=false,b=as,out=y12);
    Xor(a=false,b=as,out=y13);
    Xor(a=false,b=as,out=y14);
    Xor(a=false,b=as,out=y15);
//
//making pi , qi
    Xor(a=x[0],b=y0,out=p0);
    Xor(a=x[1],b=y1,out=p1);
    Xor(a=x[2],b=y2,out=p2);
    Xor(a=x[3],b=y3,out=p3);
    Xor(a=x[4],b=y4,out=p4);
    Xor(a=x[5],b=y5,out=p5);
    Xor(a=x[6],b=y6,out=p6);
    Xor(a=x[7],b=y7,out=p7);
    Xor(a=false,b=y8,out=p8);
    Xor(a=false,b=y9,out=p9);
    Xor(a=false,b=y10,out=p10);
    Xor(a=false,b=y11,out=p11);
    Xor(a=false,b=y12,out=p12);
    Xor(a=false,b=y13,out=p13);
    Xor(a=false,b=y14,out=p14);
    Xor(a=false,b=y15,out=p15);

    And(a=x[0],b=y0,out=q0);
    And(a=x[1],b=y1,out=q1);
    And(a=x[2],b=y2,out=q2);
    And(a=x[3],b=y3,out=q3);
    And(a=x[4],b=y4,out=q4);
    And(a=x[5],b=y5,out=q5);
    And(a=x[6],b=y6,out=q6);
    And(a=x[7],b=y7,out=q7);
    And(a=false,b=y8,out=q8);
    And(a=false,b=y9,out=q9);
    And(a=false,b=y10,out=q10);
    And(a=false,b=y11,out=q11);
    And(a=false,b=y12,out=q12);
    And(a=false,b=y13,out=q13);
    And(a=false,b=y14,out=q14);
    And(a=false,b=y15,out=q15);
//
//c4,c8,c12,c16
    And4 (a=p0 , b=p1 , c= p2 , d=p3 , out = hp0 );
    And4 (a=p4 , b=p5 , c= p6 , d= p7 , out = hp1 );
    And4 (a=p8 , b=p9 , c= p10 , d= p11 , out = hp2 );
    And4 (a=p12 , b=p13 , c= p14 , d= p15 , out = hp3 );

    qn3special (p3 =p3 , p2=p2 , p1=p1 , q3 =q3 , q2 =q2 , q1 =q1 , q0 =q0 , out = hq0);
    qn3special (p3 =p7 , p2=p6 , p1=p5 , q3 =q7 , q2 =q6 , q1 =q5 , q0 =q4 , out = hq1);
    qn3special (p3 =p11 , p2=p10 , p1=p9 , q3 =q11 , q2 =q10 , q1 =q9 , q0 =q8 , out = hq2);
    qn3special (p3 =p15, p2=p14 , p1=p13 , q3 =q15 , q2 =q14 , q1 =q13 , q0 =q12 , out = hq3);

    game(c0=c0,p0=hp0,p1=hp1,p2=hp2,p3=hp3,q0=hq0,q1=hq1,q2=hq2,q3=hq3,c1=c4,c2=c8,c3=c12);
    
    And4(a=hp2,b=hp1,c=hp0,d=c0,out=yt4);
    And(a=yt4,b=hp3,out=ot4);
    And4(a=hp2,b=hp1,c=hq0,d=hp3,out=ot5);
    And4(a=hp2,b=hp3,c=hq1,d=true,out=ot6);
    And(a=hp3,b=hq2,out=ot7);
    Or(a=ot4,b=ot5,out=x0);
    Or(a=ot6,b=ot7,out=x1);
    Or(a=x0,b=x1,out=x2);
    Or(a=x2,b=hq3,out=c16);

//
// finding all ci
    game(c0=c0,p0=p0,p1=p1,p2=p2,p3=p3,q0=q0,q1=q1,q2=q2,q3=q3,c1=c1,c2=c2,c3=c3);
    game(c0=c4,p0=p4,p1=p5,p2=p6,p3=p7,q0=q4,q1=q5,q2=q6,q3=q7,c1=c5,c2=c6,c3=c7);
    game(c0=c8,p0=p8,p1=p9,p2=p10,p3=p11,q0=q8,q1=q9,q2=q10,q3=q11,c1=c9,c2=c10,c3=c11);
    game(c0=c12,p0=p12,p1=p13,p2=p14,p3=p15,q0=q12,q1=q13,q2=q14,q3=q15,c1=c13,c2=c14,c3=c15);
//
// finding s[i]
    Xor3(x=x[0],y=y0,z=c0,out=s[0]);
    Xor3(x=x[1],y=y1,z=c1,out=s[1]);
    Xor3(x=x[2],y=y2,z=c2,out=s[2]);
    Xor3(x=x[3],y=y3,z=c3,out=s[3]);
    Xor3(x=x[4],y=y4,z=c4,out=s[4]);
    Xor3(x=x[5],y=y5,z=c5,out=s[5]);
    Xor3(x=x[6],y=y6,z=c6,out=s[6]);
    Xor3(x=x[7],y=y7,z=c7,out=s[7]);

//
//over flow
    Xor(a=c7,b=c8,out=overflowS);

    Xor(a=c7, b=as, out=overflowUS);
    
        

}